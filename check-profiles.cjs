require('dotenv').config();
const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = process.env.VITE_SUPABASE_URL;
const supabaseKey = process.env.VITE_SUPABASE_ANON_KEY;

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå Vari√°veis de ambiente n√£o encontradas');
  console.log('VITE_SUPABASE_URL:', supabaseUrl ? 'OK' : 'MISSING');
  console.log('VITE_SUPABASE_ANON_KEY:', supabaseKey ? 'OK' : 'MISSING');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

async function checkProfiles() {
  try {
    console.log('üîç Verificando profiles existentes...');
    
    const { data, error } = await supabase
      .from('profiles')
      .select('id, email, full_name, role, is_active, created_at')
      .order('created_at', { ascending: false });
    
    if (error) {
      console.error('‚ùå Erro ao buscar profiles:', error);
      return;
    }
    
    console.log(`\nüìä Total de profiles encontrados: ${data?.length || 0}`);
    
    if (data && data.length > 0) {
      console.log('\nüìã Lista de profiles:');
      data.forEach((profile, index) => {
        console.log(`${index + 1}. ID: ${profile.id}`);
        console.log(`   Email: ${profile.email}`);
        console.log(`   Nome: ${profile.full_name || 'N√£o informado'}`);
        console.log(`   Role: ${profile.role}`);
        console.log(`   Ativo: ${profile.is_active ? 'Sim' : 'N√£o'}`);
        console.log(`   Criado: ${new Date(profile.created_at).toLocaleString('pt-BR')}`);
        console.log('---');
      });
    } else {
      console.log('\n‚ö†Ô∏è Nenhum profile encontrado na tabela profiles!');
      console.log('\nüí° Isso explica o erro "Perfil n√£o encontrado".');
      console.log('\nüîß Solu√ß√µes poss√≠veis:');
      console.log('1. Executar o script de seed para criar usu√°rios de teste');
      console.log('2. Criar profiles manualmente no Supabase');
      console.log('3. Verificar se o trigger de cria√ß√£o autom√°tica est√° funcionando');
    }
    
  } catch (error) {
    console.error('‚ùå Erro inesperado:', error);
  }
}

checkProfiles();